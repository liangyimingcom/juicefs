name: "gateway-test"

on:
  push:
    branches: 
      - main
      - release-**
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    #The branches below must be a subset of the branches above
    branches: 
      - main
      - release-**
    paths-ignore:
      - 'docs/**'
      - '**.md'
  workflow_dispatch:

jobs:
  upload-small-files-with-mysql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo /etc/init.d/mysql start
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "mysql://root:root@\\(127.0.0.1\\)/test"
          file_size: "256K"
          file_count: 1000    

  upload-big-files-with-mysql:
    runs-on: ubuntu-latest          
    steps:
      - uses: actions/checkout@v3
      - run: sudo /etc/init.d/mysql start
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "mysql://root:root@\\(127.0.0.1\\)/test"
          file_size: "1G"
          file_count: 5    

  upload-small-files-with-sqlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo /etc/init.d/mysql start
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "sqlite3://test.db"
          file_size: "256K"
          file_count: 1000    

  upload-big-files-with-sqlite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo /etc/init.d/mysql start
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "sqlite3://test.db"
          file_size: "1G"
          file_count: 10    

  upload-small-files-with-pg:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "postgres://postgres:postgres@127.0.0.1:5432/sync_test?sslmode=disable"
          file_size: "256K"
          file_count: 1000    

  upload-big-files-with-pg:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/gateway
        with:
          meta_url: "postgres://postgres:postgres@127.0.0.1:5432/sync_test?sslmode=disable"
          file_size: "1G"
          file_count: 10    

  sync-to-gateway-with-multithread:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build linux target
        run: |
          #make juicefs
          wget -q https://github.com/juicedata/juicefs/releases/download/v1.0.0-beta3/juicefs-1.0.0-beta3-linux-amd64.tar.gz
          tar -xzf juicefs-1.0.0-beta3-linux-amd64.tar.gz

      - name: Test sync to gateway with multithread
        run: | 
          #test for PR: https://github.com/juicedata/juicefs/pull/2024
          wget -q https://dl.minio.io/client/mc/release/linux-amd64/mc
          chmod +x mc 
          sudo apt install md5deep
          sudo /etc/init.d/mysql start

          meta_url="mysql://root:root@(127.0.0.1)/test_gateway"
          volume=myjfs
          mp=/tmp/myjfs
          db_name=$(basename $meta_url)
          mysql -uroot -proot -e "set global transaction isolation level read committed;" 
          mysql -uroot -proot -e "drop database if exists $db_name; create database $db_name;" 
          export MINIO_ROOT_USER=minioadmin
          export MINIO_ROOT_PASSWORD=minioadmin
          ./juicefs format $meta_url $volume
          ./juicefs gateway $meta_url localhost:9000 &
          ./juicefs sync --dirs ./  s3://minioadmin:minioadmin@localhost:9000/$volume/source_dir/ --no-https -p 20
          ./juicefs mount -d $meta_url $mp
          rm -rf $mp/source_dir

      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1